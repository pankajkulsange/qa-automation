pipeline {
    agent any
    
    parameters {
        string(name: 'TAGS', defaultValue: '@smoke', description: 'Cucumber tags to run')
        choice(name: 'BROWSER', choices: ['chrome', 'firefox'], description: 'Browser to run tests on')
        booleanParam(name: 'HEADLESS', defaultValue: true, description: 'Run browser in headless mode')
    }
    
    environment {
        MAVEN_OPTS = '-Xmx2048m'
        PROJECT_PATH = 'D:/projects/first-project/qa-automation'
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    echo "Using project at: ${PROJECT_PATH}"
                    dir("${PROJECT_PATH}") {
                        echo "Project directory contents:"
                        bat 'dir'
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    dir("${PROJECT_PATH}") {
                        def cucumberOptions = "--tags '${params.TAGS}' --plugin html:target/cucumber-reports/html --plugin json:target/cucumber-reports/cucumber.json --plugin junit:target/cucumber-reports/junit.xml"
                        
                        echo "Running tests locally..."
                        bat """
                            mvn clean test ^
                                -Dbrowser=${params.BROWSER} ^
                                -Dheadless=${params.HEADLESS} ^
                                -Dcucumber.options="${cucumberOptions}" ^
                                -Dselenium.grid.enabled=false
                        """
                    }
                }
            }
        }
        
        stage('Generate Reports') {
            steps {
                script {
                    dir("${PROJECT_PATH}") {
                        bat 'mvn verify'
                    }
                }
            }
        }
        
        stage('Archive Reports') {
            steps {
                script {
                    dir("${PROJECT_PATH}") {
                        // Archive test reports
                        archiveArtifacts artifacts: 'target/cucumber-reports/**/*', fingerprint: true
                        archiveArtifacts artifacts: 'target/surefire-reports/**/*', fingerprint: true
                        
                        // Publish test results
                        publishTestResults testResultsPattern: 'target/cucumber-reports/junit.xml'
                        
                        // Publish HTML reports
                        publishHTML([
                            allowMissing: false,
                            alwaysLinkToLastBuild: true,
                            keepAll: true,
                            reportDir: 'target/cucumber-reports/html',
                            reportFiles: 'index.html',
                            reportName: 'Cucumber HTML Report',
                            reportTitles: 'Cucumber Test Results'
                        ])
                    }
                }
            }
        }
    }
    
    post {
        always {
            script {
                dir("${PROJECT_PATH}") {
                    publishTestResults testResultsPattern: 'target/cucumber-reports/junit.xml'
                }
            }
        }
        
        success {
            echo '‚úÖ Build successful!'
            echo 'üìä Reports available in target/cucumber-reports/'
        }
        
        failure {
            echo '‚ùå Build failed!'
            echo 'Check the console output for details.'
        }
        
        unstable {
            echo '‚ö†Ô∏è Build unstable!'
            echo 'Some tests failed but build completed.'
        }
    }
}
